#!/usr/bin/env php
<?php

declare(strict_types=1);

include 'src/helpers.php';
include 'src/OasReader.php';
include 'src/TsGenerator.php';
include 'src/Config.php';
$config = include 'config/config.php';

use app\Config;
use app\OasReader;
use app\TsGenerator;


if (isset($argv[1]) && isset($argv[2])) {
    $source = $argv[1] ?? '';
    $type = $argv[2] ?? '';
    $output = $argv[3] ?? './output';
    $moduleInput = $argv[4] ?? '';
} else {
    $source = getenv('PEG_OAS');
    $type = getenv('PEG_OP');
    $moduleInput = getenv('PEG_MODULE') ?: '';
    $output = getenv('PEG_OUTPUT') ?: './output';
}

$modules = array_filter(explode(',', $moduleInput));

if (! $source || ! $type || ! in_array($type, TsGenerator::allowedTypes())) {
    printAbort('Please check your command parameters. Parameters could be set through .env file or directly with command.');
}

$reader = new OasReader();
$data = $reader->getData($source);
if (! $data) {
    printAbort('Can\'t detect the source or it\'s empty. Please check the source!');
}
printInfo('Complete reading source.');

$output = str_ends_with($output, '/') ? $output : "{$output}/";

$generator = new TsGenerator(new Config($config), $output);
printInfo('Generating files...');

if ($moduleInput) {
    printInfo("Apply filter by modules: {$moduleInput}...");
}

$generator->generate($data, $type, $modules);
printSuccess('Script completed.');
